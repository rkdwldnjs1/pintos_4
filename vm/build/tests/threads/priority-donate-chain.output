c[?7l[2J[0mSeaBIOS (version rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org)


iPXE (http://ipxe.org) 00:03.0 C980 PCI2.10 PnP PMM+013915A0+012F15A0 C980
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk...
Kernel command line: -q -threads-tests -f run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 0.
(priority-donate-chain) main should have priority 6.  Actual priority: 0.
(priority-donate-chain) main should have priority 9.  Actual priority: 0.
(priority-donate-chain) main should have priority 12.  Actual priority: 0.
(priority-donate-chain) main should have priority 15.  Actual priority: 0.
(priority-donate-chain) main should have priority 18.  Actual priority: 0.
(priority-donate-chain) main should have priority 21.  Actual priority: 0.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chain) end
Execution of 'priority-donate-chain' complete.
Timer: 56 ticks
Thread: 0 idle ticks, 56 kernel ticks, 0 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 9 reads, 18 writes
hd1:1: 0 reads, 0 writes
Console: 1451 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Kernel PANIC at ../../threads/thread.c:283 in thread_current(): assertion `is_thread (t)' failed.
Call stack: 0x800421769b 0x8004207014 0x8004220729 0x800421c5ea 0x8004208a3d 0x8004208e5b 0x8004219e66 0x800421ff3b 0x800421ffc5 0x80042207aa 0x800421c5ea 0x8004208a3d 0x8004208e5b 0x8004219e66 0x800421ff3b 0x800421ffc5 0x80042207aa 0x800421c5ea 0x8004208a3d 0x8004208e5b 0x80042071ea 0x8004208b94 0x8004208e5b 0x8004207bb0 0x8004211e8a 0x800421abf2 0x800421aa67 0x8004206948 0x80042061a3.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../filesys/inode.c:304 in inode_allow_write().
